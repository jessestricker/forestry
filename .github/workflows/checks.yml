name: Checks

on:
  push: { branches: [main] }
  pull_request: { branches: [main] }

permissions: {}

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Build & Test
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-12, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1.63.0

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@359a70e43a0bb8a13953b04a90f76428b4959bb6 # v2.2.0

      - name: Setup rustc problem matcher
        uses: jessestricker/gh-actions/actions/setup-rustc-problem-matcher@3b1e90fd7be856b658171f0a643a034a55b73230 # v0.1.0

      - name: Build
        run: cargo build --all-features --locked --verbose

      - name: Test
        run: cargo test --all-features --locked --verbose

  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1.63.0
        with: { components: clippy }

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@359a70e43a0bb8a13953b04a90f76428b4959bb6 # v2.2.0

      - name: Setup rustc problem matcher
        uses: jessestricker/gh-actions/actions/setup-rustc-problem-matcher@3b1e90fd7be856b658171f0a643a034a55b73230 # v0.1.0

      - name: Lint
        run: cargo clippy --all-features --locked --verbose -- --deny warnings

  format:
    name: Format
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1.63.0
        with: { components: rustfmt }

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@359a70e43a0bb8a13953b04a90f76428b4959bb6 # v2.2.0

      - name: Format
        run: cargo fmt --check --all --verbose -- --verbose
